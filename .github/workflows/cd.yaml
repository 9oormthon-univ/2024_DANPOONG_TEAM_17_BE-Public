name: CI/CD using GitHub Actions & Docker

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4


      - name: Print working directory
        run: pwd

      # 1. Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'


      - name: Set Properties
        run: |
          mkdir -p src/main/resources
          echo "${{ secrets.APPLICATION_YML }}" | base64 --decode > src/main/resources/application.properties
          find src

      # 2. Build the Spring Boot application
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Clean and Build with Gradle Wrapper
        run: ./gradlew bootJar

      # 3. Get current time
      - name: Get current time
        uses: 1466587594/get-current-time@v2
        id: current-time
        with:
          format: YYYY-MM-DDTHH-mm-ss
          utcOffset: "+09:00"

      - name: Show Current Time
        run: echo "CurrentTime=${{ steps.current-time.outputs.formatted }}"

      # 4. Docker image build
      - name: docker image build
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/munhwahansang_server:latest .

      # 5. DockerHub login
      - name: docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # 6. DockerHub image push
      - name: docker Hub push
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/munhwahansang_server:latest

      - name: AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      # 7. EC2 인스턴스 접속 및 애플리케이션 실행
      - name: Application Run
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            sudo docker ps -q | xargs --no-run-if-empty sudo docker stop
            sudo docker ps -a -q | xargs --no-run-if-empty sudo docker rm

            sudo docker rmi ${{ secrets.DOCKERHUB_USERNAME }}/munhwahansang_server || true
            
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/munhwahansang_server:latest
            
            sudo docker run -d -p 8080:8080 \
            --name munhwahansang_server \
            -e SPRING_DATASOURCE_URL=${{ secrets.DB_URL }} \
            -e SPRING_DATASOURCE_USERNAME=${{ secrets.DB_USERNAME }} \
            -e SPRING_DATASOURCE_PASSWORD=${{ secrets.DB_PASSWORD }} \
            ${{ secrets.DOCKERHUB_USERNAME }}/munhwahansang_server:latest

